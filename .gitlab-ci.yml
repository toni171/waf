stages:
  - install
  - test
  - build
  - push
  - deploy

variables:
  DOCKER_IMAGE: toni171/waf  # Sostituisci "yourusername" con il tuo username Docker Hub

install_dependencies:
  stage: install
  image: node:16
  script:
    # Installa le dipendenze del backend dell'admin panel
    - cd admin_panel/backend
    - npm install
    - cd ../../
    # Installa le dipendenze degli altri moduli
    - pip install -r traffic_inspection/requirements.txt
    - pip install -r logging/requirements.txt
    - pip install -r policy_management/requirements.txt
    - pip install -r threat_detection/requirements.txt
    # Installa le dipendenze del frontend dell'admin panel
    - cd admin_panel/frontend
    - npm install
    - cd ../../

test_backend_node:
  stage: test
  image: node:16
  script:
    - cd admin_panel/backend
    - npm run test  # Esegue i test del backend dell'admin panel
    - cd ../../

test_backend_python:
  stage: test
  image: python:3.9
  script:
    - pytest traffic_inspection/tests/
    - pytest logging/tests/
    - pytest policy_management/tests/
    - pytest threat_detection/tests/
  artifacts:
    when: always
    paths:
      - reports/

test_frontend:
  stage: test
  image: node:16
  script:
    - cd admin_panel/frontend
    - npm run test  # Esegue i test del frontend dell'admin panel

build_docker_images:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $DOCKER_IMAGE:traffic_inspection traffic_inspection/
    - docker build -t $DOCKER_IMAGE:logging logging/
    - docker build -t $DOCKER_IMAGE:policy_management policy_management/
    - docker build -t $DOCKER_IMAGE:threat_detection threat_detection/
    - docker build -t $DOCKER_IMAGE:admin_panel_backend admin_panel/backend/
    - docker build -t $DOCKER_IMAGE:admin_panel_frontend admin_panel/frontend/

push_docker_images:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
  script:
    - docker push $DOCKER_IMAGE:traffic_inspection
    - docker push $DOCKER_IMAGE:logging
    - docker push $DOCKER_IMAGE:policy_management
    - docker push $DOCKER_IMAGE:threat_detection
    - docker push $DOCKER_IMAGE:admin_panel_backend
    - docker push $DOCKER_IMAGE:admin_panel_frontend

deploy_local:
  stage: deploy
  image: alpine:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
  script:
    - docker-compose down
    - docker-compose up -d
  environment:
    name: local
    url: http://localhost:8000
  only:
    - main
